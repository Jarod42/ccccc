name: Windows

on:
  workflow_dispatch:
  push:
    paths:
      - 'premake/**'
      - 'samples/**'
      - 'src/**'
      - 'test/**'
      - '.github/workflows/windows.yml'

jobs:
  build:

    runs-on: windows-latest

    steps:

    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1.3

    - name: build ctemplate
      run: |
          cd 3rd
          unzip ctemplate-ctemplate-2.4.zip
          cd ctemplate-ctemplate-2.4
          cd src/htmlparser
          python generate_fsm.py htmlparser_fsm.config > htmlparser_fsm.h
          python generate_fsm.py jsparser_fsm.config > jsparser_fsm.h
          python generate_fsm.py ../tests/statemachine_test_fsm.config > ../tests/statemachine_test_fsm.h
          cd ../..
          "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE\devenv.exe" ctemplate.sln /Upgrade
          MSBuild.exe /m ctemplate.sln /p:Configuration=release
      shell: cmd

    - name: Install LLVM
      run: |
        curl -fsSL -o "libclang-release_140-based-windows-vs2019_64.7z" "https://ftp2.nluug.nl/languages/qt/development_releases/prebuilt/libclang/libclang-release_140-based-windows-vs2019_64.7z"
        7z x libclang-release_140-based-windows-vs2019_64.7z -oLLVM

    - name: debug
      run: |
          dir LLVM/libclang
          dir 3rd/ctemplate-ctemplate-2.4/Release
          dir -s 3rd/ctemplate-ctemplate-2.4/src

    - name: premake vs2022
      run: premake/premake5.exe --file="premake/premake5.lua" --llvm-root="../LLVM/libclang" --ctemplate-root="../3rd/ctemplate-ctemplate-2.4" vs2022

    - name: make config=releasewithdll
      run: |
          cd project/vs2022 && MSBuild.exe /m ccccc.sln /p:Configuration=ReleaseWithDll
          cd ../../bin/vs2022/ReleaseWithDLL && ./ccccc_test
      continue-on-error: true

    - name: make config=release
      run: |
          cd project/vs2022 && MSBuild.exe /m ccccc.sln /p:Configuration=Release
          cd ../../bin/vs2022/Release && ./ccccc_test
