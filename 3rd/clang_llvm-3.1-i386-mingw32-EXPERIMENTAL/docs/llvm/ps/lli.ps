%!PS-Adobe-3.0
%%Creator: groff version 1.21
%%CreationDate: Tue May 22 00:24:34 2012
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%+ font Courier
%%DocumentSuppliedResources: procset grops 1.21 0
%%Pages: 3
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.21 0
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
%%IncludeResource: font Courier
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Courier@0 ENC0/Courier RE/Times-Italic@0 ENC0/Times-Italic RE
/Times-Bold@0 ENC0/Times-Bold RE/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 155.07(LLI\(1\) LL)72 48 R(VM Command Guide)-1 E
(LLI\(1\))157.57 E/F1 10.95/Times-Bold@0 SF -.219(NA)72 84 S(ME).219 E
F0(lli \255 directly e)108 96 Q -.15(xe)-.15 G(cute programs from LL).15
E(VM bitcode)-1 E F1(SYNOPSIS)72 112.8 Q/F2 10/Times-Bold@0 SF(lli)108
124.8 Q F0([)2.5 E/F3 10/Times-Italic@0 SF(options)A F0 2.5(][)C F3
(\214lename)-2.5 E F0 2.5(][)C F3(pr)-2.5 E -.1(og)-.45 G -.15(ra).1 G
2.5(ma).15 G -.37(rg)-2.5 G(s).37 E F0(])A F1(DESCRIPTION)72 141.6 Q F2
(lli)108 153.6 Q F0 1.246(directly e)3.746 F -.15(xe)-.15 G 1.246
(cutes programs in).15 F/F4 9/Times-Roman@0 SF(LL)3.746 E(VM)-.9 E F0
1.246(bitcode format.)3.746 F 1.246(It tak)6.246 F 1.246
(es a program in)-.1 F F4(LL)3.746 E(VM)-.9 E F0 1.246
(bitcode format and)3.746 F -.15(exe)108 165.6 S .141
(cutes it using a just-in-time compiler).15 F 2.641(,i)-.4 G 2.641(fo)
-2.641 G .141(ne is a)-2.641 F -.25(va)-.2 G .141
(ilable for the current architecture, or an interpreter).25 F(.)-.55 E
F2(lli)5.142 E F0(tak)108 177.6 Q .506
(es all of the same code generator options as llc, b)-.1 F .505(ut the)
-.2 F 3.005(ya)-.15 G .505(re only ef)-3.005 F(fecti)-.25 E .805 -.15
(ve w)-.25 H(hen).15 E F2(lli)3.005 E F0 .505(is using the just-in-)
3.005 F(time compiler)108 189.6 Q(.)-.55 E(If)108 206.4 Q F3(\214lename)
2.5 E F0(is not speci\214ed, then)2.5 E F2(lli)2.5 E F0(reads the)2.5 E
F4(LL)2.5 E(VM)-.9 E F0(bitcode for the program from standard input.)2.5
E(The optional)108 223.2 Q F3(ar)2.5 E(gs)-.37 E F0
(speci\214ed on the command line are passed to the program as ar)2.5 E
(guments.)-.18 E F1(GENERAL OPTIONS)72 240 Q F2(\255fak)108 252 Q
(e\255ar)-.1 E(gv0)-.1 E F0(=)A F3 -.2(ex)C(ecutable).2 E F0(Ov)128 264
Q(erride the)-.15 E/F5 10/Courier@0 SF(argv[0])2.5 E F0 -.25(va)2.5 G
(lue passed into the e).25 E -.15(xe)-.15 G(cuting program.).15 E F2
<ad66>108 280.8 Q(or)-.25 E(ce\255inter)-.18 E(pr)-.1 E(eter)-.18 E F0
(=)A F3({false)A(,true})-.1 E F0 1.988
(If set to true, use the interpreter e)128 292.8 R -.15(ve)-.25 G 4.489
(ni).15 G 4.489(faj)-4.489 G 1.989(ust-in-time compiler is a)-4.489 F
-.25(va)-.2 G 1.989(ilable for this architecture.).25 F(Def)128 304.8 Q
(aults to f)-.1 E(alse.)-.1 E F2(\255help)108 321.6 Q F0
(Print a summary of command line options.)128 333.6 Q F2(\255load)108
350.4 Q F0(=)A F3(pugin\214lename)A F0(Causes)128 362.4 Q F2(lli)2.5 E
F0(to load the plugin \(shared object\) named)2.5 E F3(plugin\214lename)
2.5 E F0(and use it for optimization.)2.5 E F2(\255stats)108 379.2 Q F0
.422(Print statistics from the code-generation passes. This is only mea\
ningful for the just-in-time compiler)128 391.2 R(,)-.4 E(at present.)
128 403.2 Q F2(\255time\255passes)108 420 Q F0(Record the amount of tim\
e needed for each code-generation pass and print it to standard error)
128 432 Q(.)-.55 E F2<ad76>108 448.8 Q(ersion)-.1 E F0(Print out the v)
128 460.8 Q(ersion of)-.15 E F2(lli)2.5 E F0(and e)2.5 E
(xit without doing an)-.15 E(ything else.)-.15 E F1 -.986(TA)72 477.6 S
(RGET OPTIONS).986 E F2(\255mtriple)108 489.6 Q F0(=)A F3(tar)A -.1(ge)
-.37 G 2.5(tt).1 G(riple)-2.5 E F0(Ov)128 501.6 Q .09(erride the tar)
-.15 F .09(get triple speci\214ed in the input bitcode \214le with the \
speci\214ed string.)-.18 F .09(This may result in)5.09 F 2.5(ac)128
513.6 S(rash if you pick an architecture which is not compatible with t\
he current system.)-2.5 E F2(\255mar)108 530.4 Q(ch)-.18 E F0(=)A F3(ar)
A -.15(ch)-.37 G F0 .806
(Specify the architecture for which to generate assembly)128 542.4 R
3.306(,o)-.65 G -.15(ve)-3.456 G .806(rriding the tar).15 F .805
(get encoded in the bitcode)-.18 F 3.334(\214le. See)128 554.4 R .834
(the output of)3.334 F F2 .835(llc \255help)3.334 F F0 .835
(for a list of v)3.335 F .835(alid architectures.)-.25 F .835(By def)
5.835 F .835(ault this is inferred from the)-.1 F(tar)128 566.4 Q
(get triple or autodetected to the current architecture.)-.18 E F2
(\255mcpu)108 583.2 Q F0(=)A F3(cpuname)A F0 .178(Specify a speci\214c \
chip in the current architecture to generate code for)128 595.2 R 5.178
(.B)-.55 G 2.678(yd)-5.178 G(ef)-2.678 E .178
(ault this is inferred from)-.1 F .195(the tar)128 607.2 R .195
(get triple and autodetected to the current architecture.)-.18 F -.15
(Fo)5.196 G 2.696(ral).15 G .196(ist of a)-2.696 F -.25(va)-.2 G .196
(ilable CPUs, use:).25 F F2(llvm-as)2.696 E 2.5(</)128 619.2 S(de)-2.5 E
(v/null | llc \255mar)-.15 E(ch=xyz \255mcpu=help)-.18 E(\255mattr)108
636 Q F0(=)A F3(a1,+a2,\255a3,...)A F0(Ov)128 648 Q .972
(erride or control speci\214c attrib)-.15 F .971(utes of the tar)-.2 F
.971(get, such as whether)-.18 F F4(SIMD)3.471 E F0 .971
(operations are enabled or)3.471 F 2.709(not. The)128 660 R(def)2.709 E
.209(ault set of attrib)-.1 F .209(utes is set by the current)-.2 F F4
(CPU)2.709 E F0 5.209(.F)C .209(or a list of a)-5.359 F -.25(va)-.2 G
.21(ilable attrib).25 F .21(utes, use:)-.2 F F2(llvm-)2.71 E(as < /de)
128 672 Q(v/null | llc \255mar)-.15 E(ch=xyz \255mattr=help)-.18 E F1
(FLO)72 688.8 Q -1.04(AT)-.438 G(ING POINT OPTIONS)1.04 E F2
(\255disable\255excess\255fp\255pr)108 700.8 Q(ecision)-.18 E F0
(Disable optimizations that may increase \215oating point precision.)128
712.8 Q 188.72(CVS 2011-04-09)72 768 R(1)205.67 E 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 155.07(LLI\(1\) LL)72 48 R(VM Command Guide)-1 E
(LLI\(1\))157.57 E/F1 10/Times-Bold@0 SF
(\255enable\255no\255infs\255fp\255math)108 84 Q F0
(Enable optimizations that assume no Inf v)128 96 Q(alues.)-.25 E F1
(\255enable\255no\255nans\255fp\255math)108 112.8 Q F0
(Enable optimizations that assume no)128 124.8 Q/F2 9/Times-Roman@0 SF
-.315(NA)2.5 G(N).315 E F0 -.25(va)2.5 G(lues.).25 E F1
(\255enable\255unsafe\255fp\255math)108 141.6 Q F0(Causes)128 153.6 Q F1
(lli)2.5 E F0
(to enable optimizations that may decrease \215oating point precision.)
2.5 E F1(\255soft\255\215oat)108 170.4 Q F0(Causes)128 182.4 Q F1(lli)
2.5 E F0(to generate softw)2.5 E
(are \215oating point library calls instead of equi)-.1 E -.25(va)-.25 G
(lent hardw).25 E(are instructions.)-.1 E/F3 10.95/Times-Bold@0 SF
(CODE GENERA)72 199.2 Q(TION OPTIONS)-1.04 E F1(\255code\255model)108
211.2 Q F0(=)A/F4 10/Times-Italic@0 SF(model)A F0
(Choose the code model from:)128 223.2 Q/F5 10/Courier@0 SF
(default: Target default code model)152 241.2 Q(small: Small code model)
152 253.2 Q(kernel: Kernel code model)152 265.2 Q
(medium: Medium code model)152 277.2 Q(large: Large code model)152 289.2
Q F1(\255disable\255post\255RA\255scheduler)108 306 Q F0
(Disable scheduling after re)128 318 Q(gister allocation.)-.15 E F1
(\255disable\255spill\255fusing)108 334.8 Q F0
(Disable fusing of spill code into instructions.)128 346.8 Q F1
(\255enable\255corr)108 363.6 Q(ect\255eh\255support)-.18 E F0(Mak)128
375.6 Q 2.5(et)-.1 G(he \255lo)-2.5 E(werin)-.25 E -.2(vo)-.4 G .2 -.1
(ke p).2 H(ass insert e).1 E(xpensi)-.15 E -.15(ve)-.25 G 2.5(,b).15 G
(ut correct,)-2.7 E F2(EH)2.5 E F0(code.)2.5 E F1
(\255jit\255enable\255eh)108 392.4 Q F0
(Exception handling should be enabled in the just-in-time compiler)128
404.4 Q(.)-.55 E F1(\255join\255li)108 421.2 Q -.1(ve)-.1 G(inter).1 E
-.1(va)-.1 G(ls).1 E F0(Coalesce copies \(def)128 433.2 Q(ault=true\).)
-.1 E F1(\255nozer)108 450 Q(o\255initialized\255in\255bss)-.18 E F0
(Don')2.5 E 2.5(tp)-.18 G(lace zero-initialized symbols into the)-2.5 E
F2(BSS)2.5 E F0(section.)2.5 E F1(\255pr)108 462 Q(e\255RA\255sched)-.18
E F0(=)A F4(sc)A(heduler)-.15 E F0(Instruction schedulers a)128 474 Q
-.25(va)-.2 G(ilable \(before re).25 E(gister allocation\):)-.15 E F5
(=default: Best scheduler for the target)152 492 Q
(=none: No scheduling: breadth first sequencing)152 504 Q(=simple: Simp\
le two pass scheduling: minimize critical path and maximize processor u\
tilization)152 516 Q(=simple\255noitin: Simple two pass scheduling: Sam\
e as simple except using generic latency)152 528 Q
(=list\255burr: Bottom\255up register reduction list scheduling)152 540
Q(=list\255tdrr: Top\255down register reduction list scheduling)152 552
Q(=list\255td: Top\255down list scheduler \255print\255machineinstrs \
\255 Print generated machine code)152 564 Q F1<ad72>108 580.8 Q(egalloc)
-.18 E F0(=)A F4(allocator)A F0(Re)128 592.8 Q
(gister allocator to use \(def)-.15 E(ault=linearscan\))-.1 E F5
(=bigblock: Big\255block register allocator)152 610.8 Q
(=linearscan: linear scan register allocator =local \255)152 622.8 Q
(local register allocator)18 E(=simple: simple register allocator)152
634.8 Q F1<ad72>108 651.6 Q(elocation\255model)-.18 E F0(=)A F4(model)A
F0(Choose relocation model from:)128 663.6 Q F5
(=default: Target default relocation model)152 681.6 Q
(=static: Non\255relocatable code =pic \255)152 693.6 Q
(Fully relocatable, position independent code)18 E(=dynamic\255no\255pi\
c: Relocatable external references, non\255relocatable code)152 705.6 Q
F0 188.72(CVS 2011-04-09)72 768 R(2)205.67 E 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 155.07(LLI\(1\) LL)72 48 R(VM Command Guide)-1 E
(LLI\(1\))157.57 E/F1 10/Times-Bold@0 SF(\255spiller)108 84 Q F0
(Spiller to use \(def)128 96 Q(ault=local\))-.1 E/F2 10/Courier@0 SF
(=simple: simple spiller)152 114 Q(=local: local spiller)152 126 Q F1
(\255x86\255asm\255syntax)108 142.8 Q F0(=)A/F3 10/Times-Italic@0 SF
(syntax)A F0(Choose style of code to emit from X86 back)128 154.8 Q
(end:)-.1 E F2(=att: Emit AT&T\255style assembly)152 172.8 Q
(=intel: Emit Intel\255style assembly)152 184.8 Q/F4 10.95/Times-Bold@0
SF(EXIT ST)72 201.6 Q -1.04(AT)-.986 G(US)1.04 E F0(If)108 213.6 Q F1
(lli)2.964 E F0 -.1(fa)2.963 G .463(ils to load the program, it will e)
.1 F .463(xit with an e)-.15 F .463(xit code of 1.)-.15 F .463
(Otherwise, it will return the e)5.463 F .463(xit code of)-.15 F
(the program it e)108 225.6 Q -.15(xe)-.15 G(cutes.).15 E F4(SEE ALSO)72
242.4 Q F0(llc)108 254.4 Q F4 -.548(AU)72 271.2 S(THOR).548 E F0
(Maintained by the)108 283.2 Q/F5 9/Times-Roman@0 SF(LL)2.5 E(VM)-.9 E
F0 -.7(Te)2.5 G(am \(<http://llvm.or).7 E(g/>\).)-.18 E 188.72
(CVS 2011-04-09)72 768 R(3)205.67 E 0 Cg EP
%%Trailer
end
%%EOF
